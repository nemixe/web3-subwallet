import { useWeb3React } from '@web3-react/core'
import { useAtom } from 'jotai'
import Head from 'next/head'
import Link from 'next/link'
import styles from '../styles/Home.module.css'
import { connectorAtom } from '../utils/atoms'
import { injected, subWallet } from '../utils/connectors'

const connectorsByName = {
  SubWallet: subWallet,
  Injected: injected,
}


export default function Home() {
  const { activate, connector, account } = useWeb3React()

  const [activatingConnector, setActivatingConnector] = useAtom(connectorAtom);

  return (
    <div className={styles.container}>
      <Head>
        <title>Web3 WebGL</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>account: {account || '-'}</div>

      <div
        style={{
          display: 'grid',
          gridGap: '1rem',
          gridTemplateColumns: '1fr 1fr',
          maxWidth: '20rem',
          margin: 'auto'
        }}
      >
        {Object.keys(connectorsByName).map(name => {
          const currentConnector = connectorsByName[name]
          const activating = currentConnector === activatingConnector
          const connected = currentConnector === connector

          return (
            <button
              style={{
                height: '3rem',
                borderRadius: '1rem',
                position: 'relative'
              }}
              key={name}
              onClick={() => {
                setActivatingConnector(currentConnector)
                activate(currentConnector, (error) => {
                  if (error) {
                    setActivatingConnector(undefined)
                  }
                })
              }}
            >
              <div
                style={{
                  position: 'absolute',
                  top: '0',
                  left: '0',
                  height: '100%',
                  display: 'flex',
                  alignItems: 'center',
                  color: 'black',
                  margin: '0 0 0 1rem'
                }}
              >
                {activating && 'loading'}
                {connected && (
                  <span role="img" aria-label="check">
                    âœ…
                  </span>
                )}
              </div>
              {name}
            </button>
          )
        })}
      </div>
    </div>
  )
}
